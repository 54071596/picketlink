<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Authentication</title>
  
    <section>
      <title>Overview</title>
      
      <para>
        Authentication is the act of confirming the identity of a user.  PicketLink provides an extensible authentication API
        that allows for significant customization of the authentication process, and also supports both synchronous and asynchronous
        user authentication
      </para>
    </section>
    
    <section>
      <title>The Authentication API</title>
      
      <para>
        The <code>Identity</code> bean (which can be found in the <code>org.picketlink</code> package) provides an Authentication 
        API supported by the following methods:
      </para>
      
      <programlisting language="JAVA"><![CDATA[AuthenticationResult login();

void logout();      

boolean isLoggedIn();]]></programlisting>
      
      <para>
        The <code>login()</code> method is the <emphasis>primary</emphasis> point of entry for the authentication process. Invoking
        this method will cause PicketLink to attempt to authenticate the user based on the credentials that they have provided.
        The <code>AuthenticationResult</code> type returned by the <code>login()</code> method is a simple enum that defines the
        following two values:
      </para>
      
      <programlisting language="JAVA"><![CDATA[public enum AuthenticationResult {
    SUCCESS, FAILED
}]]></programlisting>

      <para>
        If the authentication process is successful, the <code>login()</code> method will return a result of <code>SUCCESS</code>,
        otherwise it will return a result of <code>FAILED</code>.  By default, the <code>Identity</code> bean is session-scoped,
        which means that once a user is authenticated they will stay authenticated for the duration of the session.  The
        <code>logout()</code> method allows the user to log out, thereby clearing the authentication state for their session.  
        Also, if the user's session expires (for example due to inactivity) their authentication state will also be lost 
        requiring the user to authenticate again.
      </para>
      
      <note>
        <para>
          Another point to note is that the <code>Identity</code> bean is annotated with the CDI <code>@Named</code> annotation, 
          which means that it may be invoked directly from the view layer (if the view layer, such as JSF, supports it) via an 
          EL expression.</para>      
      </note>
      
      <para>
        While the user is authenticated, it is possible to access their <code>User</code> object via the <code>Identity</code>
        bean's <code>getUser()</code> method:
      </para>
      
      <programlisting language="JAVA"><![CDATA[Agent getUser();]]></programlisting>
      
      <note>
        <para>
          Don't worry that the <code>getUser()</code> method returns an <code>Agent</code> object - <code>Agent</code> is actually 
          the superclass of <code>User</code>, and represents a non-human entity (while <code>User</code> represents a human entity).
        </para>
      </note>
      
      <programlisting language="JAVA"><![CDATA[public interface Authenticator {
    public enum AuthenticationStatus {
        SUCCESS, 
        FAILURE, 
        DEFERRED
    }

    void authenticate();

    void postAuthenticate();

    AuthenticationStatus getStatus();

    Agent getUser();
}]]></programlisting>


    </section>
    
    <section>
      <title>The Authentication Process</title>
      
      <para>
      
      </para>
    </section>

</chapter>
